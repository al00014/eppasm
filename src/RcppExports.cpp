// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// eppasmOO
SEXP eppasmOO(SEXP fp, int MODEL, bool MIX);
RcppExport SEXP _eppasm_eppasmOO(SEXP fpSEXP, SEXP MODELSEXP, SEXP MIXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type fp(fpSEXP);
    Rcpp::traits::input_parameter< int >::type MODEL(MODELSEXP);
    Rcpp::traits::input_parameter< bool >::type MIX(MIXSEXP);
    rcpp_result_gen = Rcpp::wrap(eppasmOO(fp, MODEL, MIX));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP ageprevC(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP eppasmC(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_eppasm_eppasmOO", (DL_FUNC) &_eppasm_eppasmOO, 3},
    {"ageprevC", (DL_FUNC) &ageprevC, 5},
    {"eppasmC",  (DL_FUNC) &eppasmC,  1},
    {NULL, NULL, 0}
};

RcppExport void R_init_eppasm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
